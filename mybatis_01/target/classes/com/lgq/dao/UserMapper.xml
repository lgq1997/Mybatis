<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace 绑定一个对应的Dao/Mapper接口,相当于以前的实现了...接口-->
<mapper namespace="com.lgq.dao.UserMapper">

    <!--select表示这是一个查询语句,id是接口中方法的名字，相当于以前的重写了...方法-->
    <select id="getUserList" resultType="com.lgq.pojo.User">
        <!--sql语句-->
        select * from mybatis.user
    </select>

    <select id="getUserById" resultType="com.lgq.pojo.User" parameterType="int">
        select * from mybatis.user where id = #{id}
    </select>

    <select id="getUserLike" resultType="com.lgq.pojo.User">
        select * from mybatis.user where name like "%"#{value}"%";
    </select>

    <insert id="addUser" parameterType="com.lgq.pojo.User">
        insert into mybatis.user (id,name,pwd) values(#{id},#{name},#{pwd});
    </insert>

    <!--对象的属性，可以直接取出来，传递map的key
        通过map可以随意制造参数，传递对象需要把对象所有的参数写出来
    -->
    <insert id="addUser2" parameterType="map">
        insert into mybatis.user (id,name,pwd) values(#{userId},#{userName},#{password});
    </insert>

    <update id="updateUser" parameterType="com.lgq.pojo.User">
        update mybatis.user set name=#{name},pwd=#{pwd} where id=#{id};
    </update>

    <delete id="deleteUser" parameterType="int">
        delete from mybatis.user where id=#{id};
    </delete>


</mapper>